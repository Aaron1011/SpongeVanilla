classes {
  "net.minecraft.server.MinecraftServer" {
    name: net.minecraft.server.MinecraftServer
    methods {
      startServerThread: B
      tick: y
    }
    fields {
      commandManager: p
      fileBannedIPs: b
      fileBannedPlayers: a
      fileWhitelist: d
      logger: j
      configurationManager: v
    }
  }

  "net.minecraft.command.ServerCommandManager" {
    name: cl
  }

  "net.minecraft.entity.Entity" {
    name: wv
    methods {
      getEntityID: F
      setEntityId: d(int)
      G: G
      Entity: (aqu)
      entityInit: h
      getDataWatcher: H
      setDead: J
      setSize: a(float;float)
      setRotation: b(float;float)
      setPosition: b(double;double;double)
      onUpdate: s_
      onEntityUpdate: K
      getMaxInPortalTime: L
      setOnFireFromLava: M
      setFire: e(int)
      extinguish: N
      kill: O
      isOffsetPositionInLiquid: c(double;double;double)
      b: b(brt)
      moveEntity: d(double;double;double)
      m: m
      Q: Q
      a: a(dt;atr)
      playSound: a(String;float;float)
      canTriggerWalking: r_
      updateFallState: a(double;boolean;atr;dt)
      getBoundingBox: S
      dealFireDamage: f(int)
      isImmuneToFire: K
      fall: e(float;float)
      isWet: U
      isInWater: V
      handleWaterMovement: W
      X: X
      Y: Y
      getSplashSound: aa
      isInsideOfMaterial: a(bof)
      handleLavaMovement: ab
      moveFlying: a(float;float;float)
      getBrightness: c(float)
      setWorld: a(aqu)
      a: a(dt;float;float)
      setLocationAndAngles: b(double;double;double;float;float)
      getDistanceToEntity: g(n.m.entity.Entity)
      getDistanceSq: e(double;double;double)
      b: b(dt)
      c: c(dt)
      getDistance: f(double;double;double)
      getDistanceSqToEntity: h(n.m.entity.Entity)
      onCollideWithPlayer: d(EntityPlayer)
      applyEntityCollision: i(n.m.entity.Entity)
      addVelocity: g (double;double;double)
      setBeenAttacked: ac
      attackEntityFrom: a(ro;float)
      d: d(float)
      canBeCollidedWith: ad
      canBePushed: ae
      addToPlayerScore: b(n.m.entity.Entity;int)
      getEntityString: ag
      onChunkLoad: ah
      s: s(alq;int)
      a: a:(alq;int;float)
      entityDropItem: a(amj;float)
      isEntityAlive: ai
      isEntityInsideOpaqueBlock: aj
      interactFirst: e(ahd)
      getCollisionBox: j
      updateRidden: ak
      updateRiderPosition: al
      getYOffset: am
      getMountedYOffset: an
      mountEntity: a(n.m.entity.Entity)
      getCollisionBorderSize: ao
      getLookVector: ap
      isEating: aq
      setEating: f(boolean)
      getInventory: at
      setCurrentItemOrArmor: c(int;amj)
      getPortalCooldown: ar
      isBurning: au
      isRiding: av
      isSneaking: aw
      setSneaking: c(boolean)
      isSprinting: ax
      setSprinting: d(boolean)
      isInvisible: ay
      setInvisible: e(boolean)
      getFlag: g(int)
      setFlag: b(int;boolean)
      getAir: aA
      setAir: h(int)
      onStruckByLightning: a(ads)
      onKillEntity: a(xm)
      j: j(double;double;double)
      setInWeb: aB
      getCommandSenderName: d_
      getParts: aC
      isEntityEqual: k(n.m.entity.Entity)
      getRotationYawHead: aD
      f: f(float)
      canAttackWithItem: aE
      hitByEntity: l(n.m.entity.Entity)
      copyDataFrom: n(n.m.entity.Entity)
      travelToDimension: c(int)
      a: a(aqo;aqu;dt;bec)
      a: a(aqo;aqu;dt;bec;float)
      getMaxSafePointTries: aF
      getTeleportDirection: aG
      doesEntityNotTriggerPressurePlate: aH
      addEntityCrashInfo: a(j)
      getUniqueID: aJ
      isPushedByWater: aK
      e_: e_
      a: a(String)
      aL: aL
      k_: k_
      g: g(boolean)
      aM: aM
      a: a(double;double;double)
      i: i(int)
      aO: aO
      aP: aP
      a: a(qw)
      aQ: aQ
      a: a(brt)
      aR: aR
      aS: aS
      h: h(boolean)
      d: d(int;amj)
      a: a(ho)
      a: a:(int;String)
      c: c
      d: d
      e: e
      f: f
      t_: t_
      a: a(ag;int)
      aT: aT
      o: o(n.m.entity.Entity)
      aU: aU
      a: a(ahd;brw)
      aV: aV
      a: a(xm;n.m.entity.Entity)
    }
  }

  "net.minecraft.entity.EntityPlayer" {
    name: ahd
    methods {
      clearItemInUse: bU
      getEquipmentInSlot: p
      getHeldItem: bz
      getName: d_
      stopUsingItem: bT
      addChatComponentMessage: b(ho)
    }
  }

  "net.minecraft.init.Bootstrap" {
    name: od
    methods {
      func_151354_b: c
    }
  }

  "net.minecraft.server.dedicated.DedicatedServer" {
    name: po
    methods {
    }
  }

  "net.minecraft.server.ThreadServerShutdown" {
    name: pe
  }

  "net.minecraft.command.ICommandSender" {
    name: ae

    methods {
      getName: d_
    }
  }

  "net.minecraft.command.CommandHandler" {
    name: ab

    methods {
      executeCommand: a(ae;String)
    }
  }

  "net.minecraft.util.IChatComponent" {
    name: ho

    methods {
      appendText: a(String)
      appendSibling: a(n.m.util.IChatComponent)
    }
  }

  "net.minecraft.util.ChatComponentText" {
    name: hu

    fields {
      text: b
    }
  }

  "net.minecraft.server.management.ServerConfigurationManager" {
    name: sn

    fields {
      playerEntityList: e
    }
  }

  "net.minecraft.entity.player.EntityPlayerMP" {
    name: qw
  }
}